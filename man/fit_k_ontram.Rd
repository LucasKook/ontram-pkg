% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/k-ontram.R
\name{fit_k_ontram}
\alias{fit_k_ontram}
\title{Function for estimating a \code{k_ontram} or \code{k_ontram_ci} model}
\usage{
fit_k_ontram(object, x, validation_data = NULL, ...)
}
\description{
Function for estimating a \code{k_ontram} or \code{k_ontram_ci} model
}
\examples{
set.seed(2021)
mbl_si <- k_mod_baseline(5L)
msh <- mod_shift(2L)
mbl_ci <- keras_model_sequential() \%>\%
   layer_dense(units = 8, input_shape = 1L, activation = "relu") \%>\%
   layer_dense(units = 5L, use_bias = FALSE, activation = "linear") \%>\%
   layer_trafo_intercept()()
m1 <- k_ontram(mbl_si, msh)
m2 <- k_ontram(mbl_ci, complex_intercept = TRUE)

data("wine", package = "ordinal")
wine$noise <- rnorm(nrow(wine))
x_train <- ontram:::.rm_int(model.matrix(~ temp + contact, data = wine[20:nrow(wine), ]))
im_train <- ontram:::.rm_int(model.matrix(~ noise, data = wine[20:nrow(wine), ]))
x_val <- ontram:::.rm_int(model.matrix(~ temp + contact, data = wine[1:19, ]))
im_val <- ontram:::.rm_int(model.matrix(~ noise, data = wine[1:19, ]))
y_train <- model.matrix(~ 0 + rating, data = wine[20:nrow(wine), ])
y_val <- model.matrix(~ 0 + rating, data = wine[1:19, ])

loss <- k_ontram_loss(ncol(y_train))
compile(m1, loss = loss, optimizer = optimizer_adam(learning_rate = 1e-2, decay = 0.001))
fit_k_ontram(m1, x = x_train, y = y_train, batch_size = nrow(wine),
             validation_data = list(x_val, y_val), epoch = 10, view_metrics = FALSE)
compile(m2, loss = loss, optimizer = optimizer_adam(learning_rate = 1e-4))
fit_k_ontram(m2, x = im_train, y = y_train, batch_size = nrow(wine),
             validation_data = list(im_val, y_val), epoch = 10, view_metrics = FALSE)
}
